---
title: "GDP and Earthquake Deaths Analysis"
author: "Hailun Ma"
format:
  html:
    theme: cosmo
    toc: true
    toc-depth: 2
    code-fold: true
jupyter: python3
execute:
  echo: true
  warning: false
  message: false
---

## Question 1
Will earthquakes affect the country's GDP development ？

finds out the top 5 countries with the most frequent earthquakes
```{python}
import pandas as pd
import matplotlib.pyplot as plt

df_eq = pd.read_csv("cleaned_data/Merged_Earthquake_Data.csv")  

top5_earthquake_countries = (
    df_eq[df_eq["country"].notna()]
    .groupby("country")
    .size()
    .sort_values(ascending=False)
    .head(5)
    .reset_index(name="Earthquake Count")
)

plt.figure(figsize=(8, 6))
bars = plt.bar(
    top5_earthquake_countries["country"],
    top5_earthquake_countries["Earthquake Count"],
    color="skyblue"
)

for bar in bars:
    height = bar.get_height()
    plt.text(
        bar.get_x() + bar.get_width() / 2,
        height + 1, 
        f"{int(height)}",
        ha='center',
        va='bottom',
        fontsize=10
    )

plt.ylabel("Number of Earthquakes")
plt.xlabel("Country")
plt.title("Top 5 Countries with Most Earthquakes")
plt.grid(axis="y", linestyle="--", alpha=0.5)
plt.tight_layout()
plt.show()
```
## 
plots the time trend of GDP for these countries + labeled years of earthquakes
```{python}
import pandas as pd
import matplotlib.pyplot as plt

df_gdp = pd.read_csv("cleaned_data/Global_GDP_cleaned.csv")
df_eq = pd.read_csv("cleaned_data/Merged_Earthquake_Data.csv")

df_gdp["Country Name"] = df_gdp["Country Name"].str.upper()
df_eq["country"] = df_eq["country"].str.upper()

top_countries = ["CHINA", "INDONESIA", "JAPAN", "IRAN", "TURKEY"]

country_mapping = {
    "IRAN": "IRAN, ISLAMIC REP.",
    "TURKEY": "TURKIYE"
}
mapped_names = [country_mapping.get(c, c) for c in top_countries]

gdp_top = df_gdp[df_gdp["Country Name"].isin(mapped_names)]
eq_years = df_eq[df_eq["country"].isin(top_countries)][["country", "Year"]].drop_duplicates()

fig, axes = plt.subplots(nrows=3, ncols=2, figsize=(15, 12))
axes = axes.flatten()

for i, (orig_name, mapped_name) in enumerate(zip(top_countries, mapped_names)):
    ax = axes[i]
    df_c = gdp_top[gdp_top["Country Name"] == mapped_name]
    ax.plot(df_c["Year"], df_c["GDP"], label="GDP", color="steelblue")

    years = eq_years[eq_years["country"] == orig_name]["Year"].unique()
    for y in years:
        if y in df_c["Year"].values:
            gdp_y = df_c[df_c["Year"] == y]["GDP"].values[0]
            ax.scatter(y, gdp_y, color="red", s=40, label="Earthquake Year" if y == years[0] else "")

    ax.set_title(orig_name)
    ax.set_xlabel("Year")
    ax.set_ylabel("GDP (US$)")
    ax.grid(True, linestyle="--", alpha=0.4)
    ax.legend()

for j in range(len(top_countries), len(axes)):
    fig.delaxes(axes[j])

plt.tight_layout()
plt.suptitle("GDP Trends with Earthquake Years Highlighted", fontsize=16, y=1.02)
plt.savefig("GDP_files/figure-html/gdp_earthquake_comparison.png", dpi=300, bbox_inches="tight")

plt.show()
```
## observation
China’s GDP shows uninterrupted exponential growth, especially after 2000, suggesting strong economic resilience and limited long-term impact from earthquakes. Indonesia presents steady growth with occasional dips, particularly in the late 1990s and mid-2000s, which may be linked to earthquakes or broader economic crises like the Asian financial crisis. Japan, a developed country with extensive earthquake exposure, maintains relatively stable GDP growth, with only a minor decline around 2011, potentially reflecting the impact of the Tōhoku earthquake. Iran displays the most volatility, with noticeable GDP drops around earthquake years such as 1990 and 2012, indicating higher economic vulnerability—possibly exacerbated by sanctions or governance issues. Turkey, though frequently affected by earthquakes, demonstrates strong post-2000 growth with only minor setbacks, such as a dip around 2001. Overall, the trends suggest that countries with higher GDP tend to exhibit greater economic resilience to earthquakes, while lower-GDP countries are more likely to experience noticeable economic disruptions following seismic events.


## Question 2：Is there a relationship between the number of deaths from earthquakes and a country's GDP (do countries with lower GDPs have higher death rates due to poor infrastructure and poor disaster response?)
Find out in which year the 5 countries with the lowest GDP had major earthquakes and death tolls
```{python}
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

df_gdp = pd.read_csv("cleaned_data/Global_GDP_cleaned.csv")
df_eq = pd.read_csv("cleaned_data/Merged_Earthquake_Data.csv")

country_name_map = {
    "USA": "United States",
    "IRAN": "Iran",
    "BURMA": "Myanmar",
    "AFGHANISTAN-TAJIKISTAN": "Afghanistan",
    "IRAN; PAKISTAN": "Iran",
    "HAITI": "Haiti",
    "NICARAGUA": "Nicaragua",
    "EL SALVADOR": "El Salvador",
    "BOLIVIA": "Bolivia",
}
df_eq["country_cleaned"] = df_eq["country"].replace(country_name_map)

eq_valid = df_eq[["country_cleaned", "Year", "Mag", "Total Deaths"]].dropna()
eq_valid = eq_valid.rename(columns={"country_cleaned": "country"})

merged = pd.merge(
    eq_valid,
    df_gdp,
    left_on=["country", "Year"],
    right_on=["Country Name", "Year"],
    how="inner"
)

avg_gdp = merged.groupby("country")["GDP"].mean().reset_index().sort_values(by="GDP")
lowest_5_countries = avg_gdp.head(5)["country"].tolist()

df_plot = merged[merged["country"].isin(lowest_5_countries)]

labels = df_plot["country"] + " (" + df_plot["Year"].astype(int).astype(str) + ")"
gdp_values = df_plot["GDP"]
deaths = df_plot["Total Deaths"]

plt.figure(figsize=(10, 6))
bars = plt.barh(labels, gdp_values, color="tomato")

formatter = ticker.FuncFormatter(lambda x, _: f"${x/1e9:.2f}B" if x >= 1e9 else f"${x/1e6:.0f}M")
plt.gca().xaxis.set_major_formatter(formatter)

for bar, death in zip(bars, deaths):
    width = bar.get_width()
    plt.text(width + width * 0.01, bar.get_y() + bar.get_height() / 2,
             f"{int(death):,} deaths", va='center', fontsize=9)

plt.xlabel("GDP (US$) in Earthquake Year")
plt.title("Major Earthquakes in Lowest GDP Countries")
plt.grid(axis="x", linestyle="--", alpha=0.5)
plt.tight_layout()
plt.savefig("GDP_files/figure-html/low_GDP_countries.png", dpi=300, bbox_inches="tight")
plt.show()
```
## 5 higher GDP countries
```{python}

```
##
Horizontal bars of GDP for the top 5 countries with the highest GDP in the year of the earthquake, by peer comparison
```{python}
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

df_gdp = pd.read_csv("cleaned_data/Global_GDP_cleaned.csv")
df_eq = pd.read_csv("cleaned_data/Global_earthquake_20th_century_cleaned.csv")

eq_years_full = df_eq[["region", "year", "richter", "deaths"]].dropna()
gdp_eq_full = pd.merge(
    eq_years_full,
    df_gdp,
    left_on=["region", "year"],
    right_on=["Country Name", "Year"],
    how="inner"
)
gdp_eq_complete = gdp_eq_full[["region", "year", "GDP", "richter", "deaths"]].dropna()

avg_gdp_complete_high = (
    gdp_eq_complete.groupby("region")["GDP"]
    .mean()
    .reset_index()
    .sort_values(by="GDP", ascending=False)
)
high_gdp_countries = avg_gdp_complete_high.head(5)["region"].tolist()

gdp_eq_complete_high = gdp_eq_complete[
    gdp_eq_complete["region"].isin(high_gdp_countries)
]

labels_high = gdp_eq_complete_high["region"] + " (" + gdp_eq_complete_high["year"].astype(str) + ")"
gdp_values_high = gdp_eq_complete_high["GDP"]
deaths_high = gdp_eq_complete_high["deaths"]

plt.figure(figsize=(10, 6))
bars = plt.barh(labels_high, gdp_values_high, color="seagreen")

formatter = ticker.FuncFormatter(lambda x, pos: f"${x/1e9:.2f}B" if x >= 1e9 else f"${x/1e6:.0f}M")
plt.gca().xaxis.set_major_formatter(formatter)

for bar, death in zip(bars, deaths_high):
    width = bar.get_width()
    plt.text(width + width * 0.02, bar.get_y() + bar.get_height() / 2,
             f"{int(death):,} deaths", va="center", fontsize=9)

plt.xlabel("GDP in Earthquake Year (US$)")
plt.title("GDP vs Earthquake Deaths (Highest 5 GDP Countries)")
plt.grid(axis="x", linestyle="--", alpha=0.5)
plt.tight_layout()
plt.show()
```
## 
